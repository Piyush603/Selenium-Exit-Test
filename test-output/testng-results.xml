<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="20" total="40" passed="17" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-07T14:53:29 IST" name="Suite" finished-at="2022-10-07T15:14:45 IST" duration-ms="1276805">
    <groups>
      <group name="smoke">
        <method signature="LoginTest.correctemailtest()[pri:1, instance:Com.Sample.testcases.LoginTest@427b5f92]" name="correctemailtest" class="Com.Sample.testcases.LoginTest"/>
        <method signature="LoginTest.Incorrectemailtest()[pri:2, instance:Com.Sample.testcases.LoginTest@427b5f92]" name="Incorrectemailtest" class="Com.Sample.testcases.LoginTest"/>
        <method signature="AddaddressTest.AddValidAddresstest()[pri:3, instance:Com.Sample.testcases.AddaddressTest@1991f767]" name="AddValidAddresstest" class="Com.Sample.testcases.AddaddressTest"/>
        <method signature="AddaddressTest.AddInvalidAddresstest()[pri:4, instance:Com.Sample.testcases.AddaddressTest@1991f767]" name="AddInvalidAddresstest" class="Com.Sample.testcases.AddaddressTest"/>
        <method signature="DeleteAddressTest.EditAddressTest()[pri:5, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5]" name="EditAddressTest" class="Com.Sample.testcases.DeleteAddressTest"/>
        <method signature="DeleteAddressTest.DeleteAddressTest1()[pri:6, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5]" name="DeleteAddressTest1" class="Com.Sample.testcases.DeleteAddressTest"/>
        <method signature="SignoutTest.SignouttTest()[pri:20, instance:Com.Sample.testcases.SignoutTest@f74e835]" name="SignouttTest" class="Com.Sample.testcases.SignoutTest"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="SuperCoinZoneTest.SuperCoinZoneTest1()[pri:7, instance:Com.Sample.testcases.SuperCoinZoneTest@4c6daf0]" name="SuperCoinZoneTest1" class="Com.Sample.testcases.SuperCoinZoneTest"/>
        <method signature="OrdersTest.OrderTest()[pri:8, instance:Com.Sample.testcases.OrdersTest@659eef7]" name="OrderTest" class="Com.Sample.testcases.OrdersTest"/>
        <method signature="OrdersTest.FilterOrderTest()[pri:9, instance:Com.Sample.testcases.OrdersTest@659eef7]" name="FilterOrderTest" class="Com.Sample.testcases.OrdersTest"/>
        <method signature="WishlistTest.Wishlist()[pri:10, instance:Com.Sample.testcases.WishlistTest@162be91c]" name="Wishlist" class="Com.Sample.testcases.WishlistTest"/>
        <method signature="WishlistTest.DeleteWishlist()[pri:11, instance:Com.Sample.testcases.WishlistTest@162be91c]" name="DeleteWishlist" class="Com.Sample.testcases.WishlistTest"/>
        <method signature="SearchTest.Search()[pri:12, instance:Com.Sample.testcases.SearchTest@2488b073]" name="Search" class="Com.Sample.testcases.SearchTest"/>
        <method signature="SearchTest.AddToCart()[pri:13, instance:Com.Sample.testcases.SearchTest@2488b073]" name="AddToCart" class="Com.Sample.testcases.SearchTest"/>
        <method signature="FilterTest.Filter()[pri:14, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" name="Filter" class="Com.Sample.testcases.FilterTest"/>
        <method signature="FilterTest.FilterFewThings()[pri:15, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" name="FilterFewThings" class="Com.Sample.testcases.FilterTest"/>
        <method signature="FilterTest.DeleteFilteredThings()[pri:16, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" name="DeleteFilteredThings" class="Com.Sample.testcases.FilterTest"/>
        <method signature="SellerTest.SellerTest1()[pri:17, instance:Com.Sample.testcases.SellerTest@1cd201a8]" name="SellerTest1" class="Com.Sample.testcases.SellerTest"/>
        <method signature="FavoritesTest.AddToWishlist()[pri:18, instance:Com.Sample.testcases.FavoritesTest@1992eaf4]" name="AddToWishlist" class="Com.Sample.testcases.FavoritesTest"/>
        <method signature="FavoritesTest.DeleteFromWishlist()[pri:19, instance:Com.Sample.testcases.FavoritesTest@1992eaf4]" name="DeleteFromWishlist" class="Com.Sample.testcases.FavoritesTest"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2022-10-07T14:53:29 IST" name="Test" finished-at="2022-10-07T15:14:45 IST" duration-ms="1276805">
      <class name="Com.Sample.testcases.SellerTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.SellerTest@1cd201a8]" started-at="2022-10-07T15:09:25 IST" name="startTest" finished-at="2022-10-07T15:09:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.SellerTest.SellerTest1() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.SellerTest@1cd201a8]" started-at="2022-10-07T15:09:25 IST" name="Setup" finished-at="2022-10-07T15:10:30 IST" duration-ms="64867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="SellerTest1()[pri:17, instance:Com.Sample.testcases.SellerTest@1cd201a8]" started-at="2022-10-07T15:10:30 IST" name="SellerTest1" finished-at="2022-10-07T15:10:46 IST" duration-ms="15777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SellerTest1 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.SellerTest@1cd201a8]" started-at="2022-10-07T15:10:46 IST" name="afterMethod" finished-at="2022-10-07T15:10:46 IST" duration-ms="62" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SellerTest1 status=SUCCESS method=SellerTest.SellerTest1()[pri:17, instance:Com.Sample.testcases.SellerTest@1cd201a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.SellerTest@1cd201a8]" started-at="2022-10-07T15:10:46 IST" name="teardown" finished-at="2022-10-07T15:10:46 IST" duration-ms="294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Com.Sample.testcases.SellerTest -->
      <class name="Com.Sample.testcases.SuperCoinZoneTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.SuperCoinZoneTest@4c6daf0]" started-at="2022-10-07T14:58:43 IST" name="startTest" finished-at="2022-10-07T14:58:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.SuperCoinZoneTest.SuperCoinZoneTest1() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.SuperCoinZoneTest@4c6daf0]" started-at="2022-10-07T14:58:43 IST" name="Setup" finished-at="2022-10-07T14:59:09 IST" duration-ms="25161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="SuperCoinZoneTest1()[pri:7, instance:Com.Sample.testcases.SuperCoinZoneTest@4c6daf0]" started-at="2022-10-07T14:59:09 IST" name="SuperCoinZoneTest1" finished-at="2022-10-07T14:59:27 IST" duration-ms="18662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuperCoinZoneTest1 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.SuperCoinZoneTest@4c6daf0]" started-at="2022-10-07T14:59:27 IST" name="afterMethod" finished-at="2022-10-07T14:59:27 IST" duration-ms="26" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SuperCoinZoneTest1 status=SUCCESS method=SuperCoinZoneTest.SuperCoinZoneTest1()[pri:7, instance:Com.Sample.testcases.SuperCoinZoneTest@4c6daf0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.SuperCoinZoneTest@4c6daf0]" started-at="2022-10-07T14:59:27 IST" name="teardown" finished-at="2022-10-07T14:59:28 IST" duration-ms="361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Com.Sample.testcases.SuperCoinZoneTest -->
      <class name="Com.Sample.testcases.FilterTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:04:35 IST" name="startTest" finished-at="2022-10-07T15:04:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.FilterTest.Filter() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:04:35 IST" name="Setup" finished-at="2022-10-07T15:05:40 IST" duration-ms="65000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="Filter()[pri:14, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:05:40 IST" name="Filter" finished-at="2022-10-07T15:05:55 IST" duration-ms="14995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Filter -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:05:55 IST" name="afterMethod" finished-at="2022-10-07T15:05:55 IST" duration-ms="64" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Filter status=SUCCESS method=FilterTest.Filter()[pri:14, instance:Com.Sample.testcases.FilterTest@1c9f0a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:05:55 IST" name="teardown" finished-at="2022-10-07T15:05:55 IST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:05:55 IST" name="startTest" finished-at="2022-10-07T15:05:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.FilterTest.FilterFewThings() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:05:55 IST" name="Setup" finished-at="2022-10-07T15:06:39 IST" duration-ms="44091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="FilterFewThings()[pri:15, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:06:39 IST" name="FilterFewThings" finished-at="2022-10-07T15:07:49 IST" duration-ms="70127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterFewThings -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:07:49 IST" name="afterMethod" finished-at="2022-10-07T15:07:49 IST" duration-ms="63" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterFewThings status=SUCCESS method=FilterTest.FilterFewThings()[pri:15, instance:Com.Sample.testcases.FilterTest@1c9f0a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:07:49 IST" name="teardown" finished-at="2022-10-07T15:07:49 IST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:07:49 IST" name="startTest" finished-at="2022-10-07T15:07:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.FilterTest.DeleteFilteredThings() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:07:49 IST" name="Setup" finished-at="2022-10-07T15:09:05 IST" duration-ms="75576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="DeleteFilteredThings()[pri:16, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:09:05 IST" name="DeleteFilteredThings" finished-at="2022-10-07T15:09:24 IST" duration-ms="18972" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <input type="text" class="_34uFYj" placeholder="Search Brand" value=""> is not clickable at point (143, 458). Other element would receive the click: <div class="_1XXPTY _1v2cG7">...</div>
  (Session info: chrome=106.0.5249.91)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'IN-PG02A7W0', ip: '192.168.29.148', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.91, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\PIYUSH~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51716}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e07c3eb5f76cfedf625bf8f431ed3c5b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <input type="text" class="_34uFYj" placeholder="Search Brand" value=""> is not clickable at point (143, 458). Other element would receive the click: <div class="_1XXPTY _1v2cG7">...</div>
  (Session info: chrome=106.0.5249.91)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'IN-PG02A7W0', ip: '192.168.29.148', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 106.0.5249.91, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\Users\PIYUSH~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51716}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: e07c3eb5f76cfedf625bf8f431ed3c5b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at Com.Sample.testcases.FilterTest.DeleteFilteredThings(FilterTest.java:145)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteFilteredThings -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:09:24 IST" name="afterMethod" finished-at="2022-10-07T15:09:25 IST" duration-ms="845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteFilteredThings status=FAILURE method=FilterTest.DeleteFilteredThings()[pri:16, instance:Com.Sample.testcases.FilterTest@1c9f0a20] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.FilterTest@1c9f0a20]" started-at="2022-10-07T15:09:25 IST" name="teardown" finished-at="2022-10-07T15:09:25 IST" duration-ms="251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Com.Sample.testcases.FilterTest -->
      <class name="Com.Sample.testcases.LoginTest">
        <test-method is-config="true" signature="init()[pri:0, instance:Com.Sample.testcases.LoginTest@427b5f92]" started-at="2022-10-07T14:53:28 IST" name="init" finished-at="2022-10-07T14:53:29 IST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.LoginTest@427b5f92]" started-at="2022-10-07T14:53:29 IST" name="startTest" finished-at="2022-10-07T14:53:29 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.LoginTest.correctemailtest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.LoginTest@427b5f92]" started-at="2022-10-07T14:53:29 IST" name="Setup" finished-at="2022-10-07T14:53:47 IST" duration-ms="18486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="correctemailtest()[pri:1, instance:Com.Sample.testcases.LoginTest@427b5f92]" started-at="2022-10-07T14:53:47 IST" name="correctemailtest" finished-at="2022-10-07T14:53:54 IST" duration-ms="7017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- correctemailtest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.LoginTest@427b5f92]" started-at="2022-10-07T14:53:54 IST" name="afterMethod" finished-at="2022-10-07T14:53:54 IST" duration-ms="396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=correctemailtest status=SUCCESS method=LoginTest.correctemailtest()[pri:1, instance:Com.Sample.testcases.LoginTest@427b5f92] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.LoginTest@427b5f92]" started-at="2022-10-07T14:53:54 IST" name="teardown" finished-at="2022-10-07T14:53:55 IST" duration-ms="209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.LoginTest@427b5f92]" started-at="2022-10-07T14:53:55 IST" name="startTest" finished-at="2022-10-07T14:53:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.LoginTest.Incorrectemailtest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.LoginTest@427b5f92]" started-at="2022-10-07T14:53:55 IST" name="Setup" finished-at="2022-10-07T14:54:05 IST" duration-ms="10449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="Incorrectemailtest()[pri:2, instance:Com.Sample.testcases.LoginTest@427b5f92]" started-at="2022-10-07T14:54:05 IST" name="Incorrectemailtest" finished-at="2022-10-07T14:54:11 IST" duration-ms="6139" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at java.base/java.util.concurrent.TimeUnit.convert(TimeUnit.java:189)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.implicitlyWait(RemoteWebDriver.java:781)
at Com.Sample.testcases.LoginTest.Incorrectemailtest(LoginTest.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Incorrectemailtest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.LoginTest@427b5f92]" started-at="2022-10-07T14:54:11 IST" name="afterMethod" finished-at="2022-10-07T14:54:12 IST" duration-ms="636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Incorrectemailtest status=FAILURE method=LoginTest.Incorrectemailtest()[pri:2, instance:Com.Sample.testcases.LoginTest@427b5f92] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.LoginTest@427b5f92]" started-at="2022-10-07T14:54:12 IST" name="teardown" finished-at="2022-10-07T14:54:14 IST" duration-ms="2439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="reportFlush()[pri:0, instance:Com.Sample.testcases.LoginTest@427b5f92]" started-at="2022-10-07T15:14:45 IST" name="reportFlush" finished-at="2022-10-07T15:14:45 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reportFlush -->
      </class> <!-- Com.Sample.testcases.LoginTest -->
      <class name="Com.Sample.testcases.AddaddressTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.AddaddressTest@1991f767]" started-at="2022-10-07T14:54:14 IST" name="startTest" finished-at="2022-10-07T14:54:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.AddaddressTest.AddValidAddresstest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.AddaddressTest@1991f767]" started-at="2022-10-07T14:54:14 IST" name="Setup" finished-at="2022-10-07T14:55:42 IST" duration-ms="87738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="AddValidAddresstest()[pri:3, instance:Com.Sample.testcases.AddaddressTest@1991f767]" started-at="2022-10-07T14:55:42 IST" name="AddValidAddresstest" finished-at="2022-10-07T14:56:09 IST" duration-ms="27254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddValidAddresstest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.AddaddressTest@1991f767]" started-at="2022-10-07T14:56:09 IST" name="afterMethod" finished-at="2022-10-07T14:56:09 IST" duration-ms="46" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddValidAddresstest status=SUCCESS method=AddaddressTest.AddValidAddresstest()[pri:3, instance:Com.Sample.testcases.AddaddressTest@1991f767] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.AddaddressTest@1991f767]" started-at="2022-10-07T14:56:09 IST" name="teardown" finished-at="2022-10-07T14:56:12 IST" duration-ms="2437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.AddaddressTest@1991f767]" started-at="2022-10-07T14:56:12 IST" name="startTest" finished-at="2022-10-07T14:56:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.AddaddressTest.AddInvalidAddresstest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.AddaddressTest@1991f767]" started-at="2022-10-07T14:56:12 IST" name="Setup" finished-at="2022-10-07T14:56:28 IST" duration-ms="16416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="AddInvalidAddresstest()[pri:4, instance:Com.Sample.testcases.AddaddressTest@1991f767]" started-at="2022-10-07T14:56:28 IST" name="AddInvalidAddresstest" finished-at="2022-10-07T14:56:55 IST" duration-ms="27209" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Mange Addresses] but found [Manage Addresses]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Mange Addresses] but found [Manage Addresses]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at Com.Sample.testcases.AddaddressTest.AddInvalidAddresstest(AddaddressTest.java:153)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddInvalidAddresstest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.AddaddressTest@1991f767]" started-at="2022-10-07T14:56:55 IST" name="afterMethod" finished-at="2022-10-07T14:56:56 IST" duration-ms="344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddInvalidAddresstest status=FAILURE method=AddaddressTest.AddInvalidAddresstest()[pri:4, instance:Com.Sample.testcases.AddaddressTest@1991f767] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.AddaddressTest@1991f767]" started-at="2022-10-07T14:56:56 IST" name="teardown" finished-at="2022-10-07T14:56:58 IST" duration-ms="2414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Com.Sample.testcases.AddaddressTest -->
      <class name="Com.Sample.testcases.FavoritesTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.FavoritesTest@1992eaf4]" started-at="2022-10-07T15:10:46 IST" name="startTest" finished-at="2022-10-07T15:10:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.FavoritesTest.AddToWishlist() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.FavoritesTest@1992eaf4]" started-at="2022-10-07T15:10:46 IST" name="Setup" finished-at="2022-10-07T15:11:32 IST" duration-ms="46243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="AddToWishlist()[pri:18, instance:Com.Sample.testcases.FavoritesTest@1992eaf4]" started-at="2022-10-07T15:11:32 IST" name="AddToWishlist" finished-at="2022-10-07T15:12:02 IST" duration-ms="29955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddToWishlist -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.FavoritesTest@1992eaf4]" started-at="2022-10-07T15:12:02 IST" name="afterMethod" finished-at="2022-10-07T15:12:02 IST" duration-ms="47" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddToWishlist status=SUCCESS method=FavoritesTest.AddToWishlist()[pri:18, instance:Com.Sample.testcases.FavoritesTest@1992eaf4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.FavoritesTest@1992eaf4]" started-at="2022-10-07T15:12:02 IST" name="teardown" finished-at="2022-10-07T15:12:02 IST" duration-ms="199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.FavoritesTest@1992eaf4]" started-at="2022-10-07T15:12:02 IST" name="Setup" finished-at="2022-10-07T15:12:36 IST" duration-ms="33976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.FavoritesTest@1992eaf4]" started-at="2022-10-07T15:12:02 IST" name="startTest" finished-at="2022-10-07T15:12:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.FavoritesTest.DeleteFromWishlist() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="DeleteFromWishlist()[pri:19, instance:Com.Sample.testcases.FavoritesTest@1992eaf4]" started-at="2022-10-07T15:12:36 IST" name="DeleteFromWishlist" finished-at="2022-10-07T15:12:54 IST" duration-ms="17628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteFromWishlist -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.FavoritesTest@1992eaf4]" started-at="2022-10-07T15:12:54 IST" name="afterMethod" finished-at="2022-10-07T15:12:54 IST" duration-ms="48" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteFromWishlist status=SUCCESS method=FavoritesTest.DeleteFromWishlist()[pri:19, instance:Com.Sample.testcases.FavoritesTest@1992eaf4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.FavoritesTest@1992eaf4]" started-at="2022-10-07T15:12:54 IST" name="teardown" finished-at="2022-10-07T15:12:54 IST" duration-ms="165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Com.Sample.testcases.FavoritesTest -->
      <class name="Com.Sample.testcases.SignoutTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.SignoutTest@f74e835]" started-at="2022-10-07T15:12:54 IST" name="startTest" finished-at="2022-10-07T15:12:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.SignoutTest.SignouttTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.SignoutTest@f74e835]" started-at="2022-10-07T15:12:54 IST" name="Setup" finished-at="2022-10-07T15:14:34 IST" duration-ms="99536" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="SignouttTest()[pri:20, instance:Com.Sample.testcases.SignoutTest@f74e835]" started-at="2022-10-07T15:14:34 IST" name="SignouttTest" finished-at="2022-10-07T15:14:43 IST" duration-ms="8959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignouttTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.SignoutTest@f74e835]" started-at="2022-10-07T15:14:43 IST" name="afterMethod" finished-at="2022-10-07T15:14:43 IST" duration-ms="27" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SignouttTest status=SUCCESS method=SignoutTest.SignouttTest()[pri:20, instance:Com.Sample.testcases.SignoutTest@f74e835] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.SignoutTest@f74e835]" started-at="2022-10-07T15:14:43 IST" name="teardown" finished-at="2022-10-07T15:14:45 IST" duration-ms="2463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Com.Sample.testcases.SignoutTest -->
      <class name="Com.Sample.testcases.SearchTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.SearchTest@2488b073]" started-at="2022-10-07T15:03:01 IST" name="startTest" finished-at="2022-10-07T15:03:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.SearchTest.Search() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.SearchTest@2488b073]" started-at="2022-10-07T15:03:01 IST" name="Setup" finished-at="2022-10-07T15:03:28 IST" duration-ms="27906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="Search()[pri:12, instance:Com.Sample.testcases.SearchTest@2488b073]" started-at="2022-10-07T15:03:28 IST" name="Search" finished-at="2022-10-07T15:03:35 IST" duration-ms="6614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Search -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.SearchTest@2488b073]" started-at="2022-10-07T15:03:35 IST" name="afterMethod" finished-at="2022-10-07T15:03:35 IST" duration-ms="44" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Search status=SUCCESS method=SearchTest.Search()[pri:12, instance:Com.Sample.testcases.SearchTest@2488b073] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.SearchTest@2488b073]" started-at="2022-10-07T15:03:35 IST" name="teardown" finished-at="2022-10-07T15:03:38 IST" duration-ms="2458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.SearchTest@2488b073]" started-at="2022-10-07T15:03:38 IST" name="startTest" finished-at="2022-10-07T15:03:38 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.SearchTest.AddToCart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.SearchTest@2488b073]" started-at="2022-10-07T15:03:38 IST" name="Setup" finished-at="2022-10-07T15:04:05 IST" duration-ms="27243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="AddToCart()[pri:13, instance:Com.Sample.testcases.SearchTest@2488b073]" started-at="2022-10-07T15:04:05 IST" name="AddToCart" finished-at="2022-10-07T15:04:34 IST" duration-ms="29460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddToCart -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.SearchTest@2488b073]" started-at="2022-10-07T15:04:34 IST" name="afterMethod" finished-at="2022-10-07T15:04:34 IST" duration-ms="96" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddToCart status=SUCCESS method=SearchTest.AddToCart()[pri:13, instance:Com.Sample.testcases.SearchTest@2488b073] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.SearchTest@2488b073]" started-at="2022-10-07T15:04:34 IST" name="teardown" finished-at="2022-10-07T15:04:35 IST" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Com.Sample.testcases.SearchTest -->
      <class name="Com.Sample.testcases.WishlistTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.WishlistTest@162be91c]" started-at="2022-10-07T15:01:33 IST" name="startTest" finished-at="2022-10-07T15:01:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.WishlistTest.Wishlist() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.WishlistTest@162be91c]" started-at="2022-10-07T15:01:33 IST" name="Setup" finished-at="2022-10-07T15:01:59 IST" duration-ms="25636" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="Wishlist()[pri:10, instance:Com.Sample.testcases.WishlistTest@162be91c]" started-at="2022-10-07T15:01:59 IST" name="Wishlist" finished-at="2022-10-07T15:02:15 IST" duration-ms="16280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Wishlist -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.WishlistTest@162be91c]" started-at="2022-10-07T15:02:15 IST" name="afterMethod" finished-at="2022-10-07T15:02:15 IST" duration-ms="77" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Wishlist status=SUCCESS method=WishlistTest.Wishlist()[pri:10, instance:Com.Sample.testcases.WishlistTest@162be91c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.WishlistTest@162be91c]" started-at="2022-10-07T15:02:15 IST" name="teardown" finished-at="2022-10-07T15:02:15 IST" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.WishlistTest@162be91c]" started-at="2022-10-07T15:02:15 IST" name="startTest" finished-at="2022-10-07T15:02:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.WishlistTest.DeleteWishlist() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.WishlistTest@162be91c]" started-at="2022-10-07T15:02:15 IST" name="Setup" finished-at="2022-10-07T15:02:41 IST" duration-ms="25830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="DeleteWishlist()[pri:11, instance:Com.Sample.testcases.WishlistTest@162be91c]" started-at="2022-10-07T15:02:41 IST" name="DeleteWishlist" finished-at="2022-10-07T15:03:00 IST" duration-ms="19227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteWishlist -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.WishlistTest@162be91c]" started-at="2022-10-07T15:03:00 IST" name="afterMethod" finished-at="2022-10-07T15:03:00 IST" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteWishlist status=SUCCESS method=WishlistTest.DeleteWishlist()[pri:11, instance:Com.Sample.testcases.WishlistTest@162be91c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.WishlistTest@162be91c]" started-at="2022-10-07T15:03:00 IST" name="teardown" finished-at="2022-10-07T15:03:01 IST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Com.Sample.testcases.WishlistTest -->
      <class name="Com.Sample.testcases.OrdersTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.OrdersTest@659eef7]" started-at="2022-10-07T14:59:28 IST" name="startTest" finished-at="2022-10-07T14:59:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.OrdersTest.OrderTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.OrdersTest@659eef7]" started-at="2022-10-07T14:59:28 IST" name="Setup" finished-at="2022-10-07T14:59:53 IST" duration-ms="25009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="OrderTest()[pri:8, instance:Com.Sample.testcases.OrdersTest@659eef7]" started-at="2022-10-07T14:59:53 IST" name="OrderTest" finished-at="2022-10-07T15:00:01 IST" duration-ms="8325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.OrdersTest@659eef7]" started-at="2022-10-07T15:00:01 IST" name="afterMethod" finished-at="2022-10-07T15:00:01 IST" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OrderTest status=SUCCESS method=OrdersTest.OrderTest()[pri:8, instance:Com.Sample.testcases.OrdersTest@659eef7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.OrdersTest@659eef7]" started-at="2022-10-07T15:00:01 IST" name="teardown" finished-at="2022-10-07T15:00:03 IST" duration-ms="2397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.OrdersTest@659eef7]" started-at="2022-10-07T15:00:03 IST" name="startTest" finished-at="2022-10-07T15:00:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.OrdersTest.FilterOrderTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.OrdersTest@659eef7]" started-at="2022-10-07T15:00:03 IST" name="Setup" finished-at="2022-10-07T15:01:23 IST" duration-ms="79103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="FilterOrderTest()[pri:9, instance:Com.Sample.testcases.OrdersTest@659eef7]" started-at="2022-10-07T15:01:23 IST" name="FilterOrderTest" finished-at="2022-10-07T15:01:33 IST" duration-ms="10288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FilterOrderTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.OrdersTest@659eef7]" started-at="2022-10-07T15:01:33 IST" name="afterMethod" finished-at="2022-10-07T15:01:33 IST" duration-ms="58" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FilterOrderTest status=SUCCESS method=OrdersTest.FilterOrderTest()[pri:9, instance:Com.Sample.testcases.OrdersTest@659eef7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.OrdersTest@659eef7]" started-at="2022-10-07T15:01:33 IST" name="teardown" finished-at="2022-10-07T15:01:33 IST" duration-ms="230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Com.Sample.testcases.OrdersTest -->
      <class name="Com.Sample.testcases.DeleteAddressTest">
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5]" started-at="2022-10-07T14:56:58 IST" name="startTest" finished-at="2022-10-07T14:56:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.DeleteAddressTest.EditAddressTest() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5]" started-at="2022-10-07T14:56:58 IST" name="Setup" finished-at="2022-10-07T14:57:24 IST" duration-ms="25970" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="EditAddressTest()[pri:5, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5]" started-at="2022-10-07T14:57:24 IST" name="EditAddressTest" finished-at="2022-10-07T14:57:52 IST" duration-ms="28172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditAddressTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5]" started-at="2022-10-07T14:57:52 IST" name="afterMethod" finished-at="2022-10-07T14:57:52 IST" duration-ms="88" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditAddressTest status=SUCCESS method=DeleteAddressTest.EditAddressTest()[pri:5, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5]" started-at="2022-10-07T14:57:52 IST" name="teardown" finished-at="2022-10-07T14:57:53 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5]" started-at="2022-10-07T14:57:53 IST" name="startTest" finished-at="2022-10-07T14:57:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Com.Sample.testcases.DeleteAddressTest.DeleteAddressTest1() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="Setup()[pri:0, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5]" started-at="2022-10-07T14:57:53 IST" name="Setup" finished-at="2022-10-07T14:58:18 IST" duration-ms="25036" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="DeleteAddressTest1()[pri:6, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5]" started-at="2022-10-07T14:58:18 IST" name="DeleteAddressTest1" finished-at="2022-10-07T14:58:41 IST" duration-ms="23259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteAddressTest1 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5]" started-at="2022-10-07T14:58:41 IST" name="afterMethod" finished-at="2022-10-07T14:58:41 IST" duration-ms="31" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteAddressTest1 status=SUCCESS method=DeleteAddressTest.DeleteAddressTest1()[pri:6, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:Com.Sample.testcases.DeleteAddressTest@768ccdc5]" started-at="2022-10-07T14:58:41 IST" name="teardown" finished-at="2022-10-07T14:58:43 IST" duration-ms="2456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Com.Sample.testcases.DeleteAddressTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
